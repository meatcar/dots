#!/bin/sh

set -eo pipefail

# based on i3 thread
# https://faq.i3wm.org/question/150/how-to-launch-a-terminal-from-here/?answer=152#post-id-152

# DEBUG=true
function debug() {
    if [ -n "$DEBUG" ]; then
        echo "$@" >> /tmp/cwd-term.log
    fi
}

debug cwd-term "\$@ '$@'"

TERMINAL_CMD=term
if [ -n "$1" ]; then
    TERMINAL_CMD="$1"
    shift
elif [ -n "$TERM" ]; then
    TERMINAL_CMD="$TERM"
elif [ -n "$TERMINAL" ]; then
    TERMINAL_CMD="$TERMINAL"
fi
debug TERMINAL_CMD "$TERMINAL_CMD"

function focusedpid() {
    if [ -n "$WAYLAND_DISPLAY" ]; then
        [ -z "$SWAYSOCK" ] && echo "This wayland compositor is not supported" >&2 && exit 1
        swaymsg -t get_tree | jq '.. | ( .nodes? // empty)[] | select(.focused) | .pid'
    elif [ -n "$DISPLAY" ]; then
        WID=$(xdpyinfo | grep focus | cut -f4 -d " " | sed 's/[^0-9a-fx]//')
        xprop -id "$WID" | grep -m 1 PID | cut -d " " -f 3
    else
        echo "DISPLAY nor WAYLAND_DISPLAY set, exiting." >&2
        exit 1
    fi
}
# Get PID
PID=$(focusedpid)
debug PID "$PID"

# Get last child process (shell, vim, etc)
if [ -n "$PID" ]; then
    # Try to get the oldest child process, use that instead
    CPID=$(pgrep --oldest --parent "$PID" || echo)
    [ -n "$CPID" ] && PID="$CPID"
    debug CPID "$CPID"
    debug PID "$PID"

    if grep -Ea '^emacs' "/proc/$PID/cmdline"; then
        echo "EMACS"
        DIR=$(emacsclient --eval \
                          '(with-current-buffer (window-buffer (selected-window)) (projectile-project-root))' \
                  | sed 's/^"//' | sed 's/"$//')

    else
        # If we find the working directory, run the command in that directory
        DIR=$(readlink /proc/"$PID"/cwd)
    fi
    debug DIR "$DIR"
    cd "$DIR" || return
else
    echo wtf
fi

exec $TERMINAL_CMD "$@"
