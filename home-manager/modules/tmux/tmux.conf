set -sa terminal-overrides "*256col*:RGB"
set -sa terminal-overrides ",alacritty:RGB"
set -sa terminal-overrides ",wezterm:RGB"

set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0


setw -g monitor-activity on
set -g monitor-activity on

# y and p as in vim
bind Escape copy-mode
bind v copy-mode
unbind p
bind p paste-buffer
bind C-p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up
bind-key -T copy-mode-vi 'Escape' send -X cancel

# Allows mouse scrolling still in Vim if you do e.g. set mouse=i
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
set -ga terminal-overrides ',alacritty*:smcup@:rmcup@'
set -g mouse on
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
         send-keys -X copy-pipe "xclip" \;\
         send-keys -X clear-selection

set -g automatic-rename on
# set -g automatic-rename-format "#{b:pane_current_path}/#{b:pane_current_command}"
set -g automatic-rename-format '\
#{?#{==:#{pane_current_path},#{HOME}},~,#{b:pane_current_path}}/\
#{?#{==:#{b:pane_current_command},#{b:SHELL}},,#{b:pane_current_command}}'
set -g set-titles on
set -g set-titles-string "#T"

##############
### DESIGN ###
##############

# panes
my_warn='colour01'
gray='colour08'
set -g pane-border-status top
set -g pane-border-style fg=$gray
set -g pane-active-border-style fg=$gray
set -g pane-border-format "\
#[reverse,bold]#{?pane_active,  #P ,}#{?pane_active, #T ,}\
#[noreverse,bg=terminal,fg=$gray,nobold]#{?pane_active,,  #P }#{?pane_active,, #T }\
#[bg=$my_warn,fg=terminal,bold]#{?pane_synchronized, ðŸ”„ SYNC ,}\
"

## Status bar design
# status line
set -g status-position top
set -g status-justify left
set -g status-interval 2
set -g status-style default
set -g message-style bright
setw -g window-status-separator      ' '
setw -g window-status-style          fg=default,dim
setw -g window-status-current-style  bg=default,bold
setw -g window-status-activity-style fg=default
setw -g window-status-bell-style     fg=brightred
setw -g window-status-last-style     fg=default,dim
setw -g window-status-current-format '#{E:window-status-format}'
setw -g window-status-format '#W'

# Info on left (I don't have a session display for now)
set -g status-justify left
set -g status-left ''
set -g status-right '#{?client_prefix,#[reverse] ^A #[noreverse],} #{?#{window_zoomed_flag},#[reverse] ðŸ”Ž ZOOM #[noreverse] ,}#{?#{session_grouped},@#{session_group},###{session_name}}'

### /DESIGN ###
###############

# Switch between vim/tmux easy, taking into account fzf
# from: https://www.bugsnag.com/blog/tmux-and-vim
# integrating: https://github.com/aserowy/tmux.nvim#usage
vim_regex="g?(view|n?vim?x?)(diff)?"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?$vim_regex$'"

is_vim_or_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?($vim_regex|fzf)$'"

bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Navigation with Ctrl-HJKL
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim_or_fzf" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim_or_fzf" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Resize with Alt-HJKL
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# Use FZF to switch Tmux sessions:
unbind s
bind s run "tmux new-window -n 'Switch Session' 'bash -ci tmux_select_session'"
unbind K
bind K run "tmux new-window -n 'Kill Session' 'bash -ci tmux_kill_session'"
# unbind C
# bind C run "tmux new-window -n 'Create Session' 'bash -ci tmux_create_session'"
# unbind C-c
# bind C-c run "tmux new-window -n 'Create Session' 'bash -ci PROJECT_PATHS= tmux_create_session'"
