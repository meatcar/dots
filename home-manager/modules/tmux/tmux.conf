set -sa terminal-overrides "*256col*:RGB"
set -sa terminal-overrides ",alacritty:RGB"
set -sa terminal-overrides ",wezterm:RGB"

set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -sg escape-time 10
set-option -sg history-limit 50000
set-option -sg display-time 4000
set-option -sg status-interval 5
set-option -sg focus-events on
set-option -sg base-index 1
set-option -sg renumber-windows on

setw -g monitor-activity on
set -g monitor-activity on

set-window-option -g aggressive-resize on

# y and p as in vim
bind Escape copy-mode
bind v copy-mode
unbind p
bind p paste-buffer
bind C-p paste-buffer
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'Space' send -X halfpage-down
bind-key -T copy-mode-vi 'Bspace' send -X halfpage-up
bind-key -T copy-mode-vi 'Escape' send -X cancel

# Allows mouse scrolling still in Vim if you do e.g. set mouse=i
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
set -ga terminal-overrides ',alacritty*:smcup@:rmcup@'
set -ga terminal-overrides ',wezterm*:smcup@:rmcup@'
set -g mouse on
bind -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 2 scroll-up
bind -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 2 scroll-down

unbind -T copy-mode-vi MouseDragEnd1Pane
bind -T copy-mode-vi MouseDown1Pane select-pane \;\
         send-keys -X copy-pipe "xclip" \;\
         send-keys -X clear-selection

set -g automatic-rename on
# format windows like "dir:cmd"
set -g automatic-rename-format '\
#{?#{==:#{pane_current_path},#{HOME}},~,#{b:pane_current_path}}\
#{?#{==:#{b:pane_current_command},#{b:SHELL}},/,:#{b:pane_current_command}}'
set -g set-titles on
set -g set-titles-string "#T"

##############
### DESIGN ###
##############

# panes
my_warn='colour01'
gray='colour08'

## Status bar design
# status line
set -g status-position top
set -g status-justify left
set -g status-interval 2
set -g status-style default
set -g message-style bright
setw -g window-status-separator      ' '
setw -g window-status-style          none
setw -g window-status-current-style  none
setw -g window-status-activity-style none
setw -g window-status-bell-style     none
setw -g window-status-last-style     none
setw -g window-status-current-format '#{E:window-status-format}'
setw -g window-status-format '#[fg=colour8,bold]î‚¶\
#[bg=colour8] \
#{?window_active,#[fg=terminal bold],#{?window_bell_flag,#[fg=colour1]!,#{?window_activity_flag,#[fg=colour2].,#[fg=colour7 nobold]}}}\
#{window_index} #W \
#[fg=colour8,bg=terminal]î‚´'

# Info on left (I don't have a session display for now)
set -g status-justify left
set -g status-left ''
set -g status-right "\
#{?client_prefix,#[reverse] ^A #[noreverse],} \
#{?window_zoomed_flag,#[reverse] ðŸ”Ž ZOOM #[noreverse] ,}\
#{?session_grouped,@#{session_group},###{session_name}}\
"

## Autohide statusbar when only one window is present.
## Source: https://untitled.dev/auto-hide-statusbar-tmux
set -g status off
set-hook -g session-created 'if "[ #{session_windows} -lt 2 ]" "set -s status off"'
set-hook -g session-window-changed 'if "[ #{session_windows} -lt 2 ]" "set -s status off"'
set-hook -g after-kill-pane 'if "[ #{session_windows} -lt 2 ]" "set -s status off"'
set-hook -g pane-exited 'if "[ #{session_windows} -lt 2 ]" "set -s status off"'
set-hook -g window-layout-changed 'if "[ #{session_windows} -lt 2 ]" "set -s status off"'
set-hook -g after-new-window 'if "[ #{session_windows} -gt 1 ]" "set -s status on"'

# pane boder & status
set -g pane-border-style fg=$gray
set -g pane-active-border-style fg=$gray
set -g pane-border-lines single
set -g pane-border-format "\
#{?#{e|==:#{window_panes},1},,#{?pane_active,#[bold#,fg=terminal],#[fg=$gray]}î‚· #T î‚µ#{?pane_active,#[nobold],}}\
#{?pane_in_mode,î‚· #{pane_mode} î‚µ,}\
#{?pane_synchronized,#[bg=$my_warn#,fg=terminal#,bold] ðŸ”„ SYNC ,}\
"

# hide pane status for single-pane windows
set -g pane-border-status off
set-hook -g session-created 'if "[ #{window_panes} -lt 2 ]" "set -w pane-border-status off"'
set-hook -g after-kill-pane 'if "[ #{window_panes} -lt 2 ]" "set -w pane-border-status off"'
set-hook -g pane-exited 'if "[ #{window_panes} -lt 2 ]" "set -w pane-border-status off"'
set-hook -g window-layout-changed 'if "[ #{window_panes} -lt 2 ]" "set -w pane-border-status off"'
set-hook -g after-split-window 'if "[ #{window_panes} -gt 1 ]" "set -w pane-border-status top"'

### /DESIGN ###
###############

# Switch between vim/tmux easy, taking into account fzf
# from: https://www.bugsnag.com/blog/tmux-and-vim
# integrating: https://github.com/aserowy/tmux.nvim#usage
vim_regex="g?(view|n?vim?x?)(diff)?"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?$vim_regex$'"

is_vim_or_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?($vim_regex|fzf)$'"

# Navigation with Ctrl-HJKL
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim_or_fzf" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim_or_fzf" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Resize with Alt-HJKL
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# Use FZF to switch Tmux sessions:
unbind s
bind-key -N "Switch session" s run-shell "tmux display-popup -E -y0 tmux_select_session; exit 0"
unbind K
bind-key -N "Kill session" K run-shell "tmux display-popup -E -y0 tmux_kill_session; exit 0"
