# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
#env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  #TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 0
    lines: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 15
    y: 15

  # Spread additional padding evenly around the terminal content.
  dynamic_padding: true

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: full

  # When true, alacritty starts maximized.
  # startup_mode: false

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

  # Faux Scrolling
  #
  # The `faux_multiplier` setting controls the number of lines the terminal
  # should scroll when the alternate screen buffer is active. This is used
  # to allow mouse scrolling for applications like `man`.
  #
  # Specifying `0` will disable faux scrolling.
  faux_multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
tabspaces: 8

# Font configuration (changes require restart)
font:
  # Point size
  size: 9

  # Normal (roman) font face
  #normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux) monospace
    #   - (Windows) Consolas
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Regular
  normal:
    family: "Dina"

  # Bold font face
  #bold:
    # Font family
    #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Bold

  # Italic font face
  #italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    #family: monospace

    # The `style` can be specified to pick a specific face.
    #style: Italic

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  use_thin_strokes: true

# Display the time it takes to redraw each frame.
# render_timer: false

# Keep the log file after quitting Alacritty.
# persistent_logging: false

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

schemes:
  hybrid: &hybrid
    # Default colors
    primary:
      background: '0x27292c'
      foreground: '0xd0d2d1'
    # Normal colors
    normal:
      black:   '0x35383b'
      red:     '0xb05655'
      green:   '0x769972'
      yellow:  '0xe1a574'
      blue:    '0x7693ac'
      magenta: '0x977ba0'
      cyan:    '0x749e99'
      white:   '0x848b92'
    # Bright colors
    bright:
      black:   '0x484c52'
      red:     '0xd27c7b'
      green:   '0xdffebe'
      yellow:  '0xf0d189'
      blue:    '0x96b1c9'
      magenta: '0xbfa5c7'
      cyan:    '0x9fc9c3'
      white:   '0xfcf7e2'

  gotham: &gotham
    # Default colors
    primary:
      background: '0x0a0f14'
      foreground: '0x98d1ce'
    # Normal colors
    normal:
      black: '0x0a0f14'
      red: '0xc33027'
      green: '0x26a98b'
      yellow: '0xedb54b'
      blue: '0x195465'
      magenta: '0x4e5165'
      cyan: '0x33859d'
      white: '0x98d1ce'
    # Bright colors
    bright:
      black: '0x10151b'
      red: '0xd26939'
      green: '0x081f2d'
      yellow: '0x245361'
      blue: '0x093748'
      magenta: '0x888ba5'
      cyan: '0x599caa'
      white: '0xd3ebe9'

  ayu_dark: &ayu_dark
    # Default colors
    primary:
      background: '0x0A0E14'
      foreground: '0xD3D1DD'
    cursor:
      text: '0x0A0E14'
      cursor: '0xF9BF5F'
    # Normal colors
    normal:
      black: '0x01060E'
      red: '0xEA6C73'
      green: '0x91B362'
      yellow: '0xF9AF4F'
      blue: '0x53BDFA'
      magenta: '0xFAE994'
      cyan: '0x90E1C6'
      white: '0xC7C7C7'
    # Bright colors
    bright:
      black: '0x686868'
      red: '0xF07178'
      green: '0xC2D94C'
      yellow: '0xFFB454'
      blue: '0x59C2FF'
      magenta: '0xFFEE99'
      cyan: '0x95E6CB'
      white: '0xFFFFFF'

  ir_black: &ir_black
    # Default colors
    primary:
      background: '0x000000'
      foreground: '0xffffff'
    cursor:
      text: '0xffffff'
      cursor: '0xffffff'
    # Normal colors
    normal:
      black:   '0x4e4e4e'
      red:     '0xff6c60'
      green:   '0xa8ff60'
      yellow:  '0xffffb6'
      blue:    '0x96cbfe'
      magenta: '0xff73fd'
      cyan:    '0xc6c5fe'
      white:   '0xeeeeee'
    # Bright colors
    bright:
      black:   '0x7c7c7c'
      red:     '0xffb6b0'
      green:   '0xceffab'
      yellow:  '0xffffcb'
      blue:    '0xb5dcfe'
      magenta: '0xff9cfe'
      cyan:    '0xdfdffe'
      white:   '0xffffff'

  pencil_dark: &pencil_dark
    # Default Colors
    primary:
      background: '0x000000'
      foreground: '0xf1f1f1'
    # Normal colors
    normal:
      black:   '0x000000'
      red:     '0xc30771'
      green:   '0x10a778'
      yellow:  '0xa89c14'
      blue:    '0x008ec4'
      magenta: '0x523c79'
      cyan:    '0x20a5ba'
      white:   '0xe0e0e0'
    # Bright colors
    bright:
      black:   '0x212121'
      red:     '0xfb007a'
      green:   '0x5fd7af'
      yellow:  '0xf3e430'
      blue:    '0x20bbfc'
      magenta: '0x6855de'
      cyan:    '0x4fb8cc'
      white: '0xf1f1f1'

  # # Colors (Tomorrow Night Bright)
  tomorrow_night_bright:  &tomorrow_night_bright
    # Default colors
    primary:
      background: '0x101010'
      foreground: '0xeeeeee'
    cursor:
      text:    '0x101010'
      cursor:  '0xf56e73'
    # Normal colors
    normal:
      black:   '0x000000'
      red:     '0xd54e53'
      green:   '0xb9ca4a'
      yellow:  '0xe6c547'
      blue:    '0x7aa6da'
      magenta: '0xc397d8'
      cyan:    '0x70c0ba'
      white:   '0xeaeaea'
    # Bright colors
    bright:
      black:   '0x666666'
      red:     '0xff3334'
      green:   '0x9ec400'
      yellow:  '0xe7c547'
      blue:    '0x7aa6da'
      magenta: '0xb77ee0'
      cyan:    '0x54ced6'
      white:   '0xffffff'

  argonaut: &argonaut
    # Default colors
    primary:
      background: '0x292C3E'
      foreground: '0xEBEBEB'
    # Cursor colors
    cursor:
      text: '0xFF261E'
      cursor: '0xFF261E'
    # Normal colors
    normal:
      black:   '0x0d0d0d'
      red:     '0xFF301B'
      green:   '0xA0E521'
      yellow:  '0xFFC620'
      blue:    '0x1BA6FA'
      magenta: '0x8763B8'
      cyan:    '0x21DEEF'
      white:   '0xEBEBEB'
    # Bright colors
    bright:
      black:   '0x6D7070'
      red:     '0xFF4352'
      green:   '0xB8E466'
      yellow:  '0xFFD750'
      blue:    '0x1BA6FA'
      magenta: '0xA578EA'
      cyan:    '0x73FBF1'
      white:   '0xFEFEF8'

  nord: &nord
    primary:
      background: '0x2E3440'
      foreground: '0xD8DEE9'
    cursor:
      text: '0x2E3440'
      cursor: '0xD8DEE9'
    normal:
      black: '0x3B4252'
      red: '0xBF616A'
      green: '0xA3BE8C'
      yellow: '0xEBCB8B'
      blue: '0x81A1C1'
      magenta: '0xB48EAD'
      cyan: '0x88C0D0'
      white: '0xE5E9F0'
    bright:
      black: '0x4C566A'
      red: '0xBF616A'
      green: '0xA3BE8C'
      yellow: '0xEBCB8B'
      blue: '0x81A1C1'
      magenta: '0xB48EAD'
      cyan: '0x8FBCBB'
      white: '0xECEFF4'

  tango: &tango
    # Default colors
    primary:
      background: '0x000000'
      foreground: '0xeeeeec'

    # Normal colors
    normal:
      black:   '0x2e3436'
      red:     '0xcc0000'
      green:   '0x4e9a06'
      yellow:  '0xc4a000'
      blue:    '0x3465a4'
      magenta: '0x75507b'
      cyan:    '0x06989a'
      white:   '0xeeeeec'

    # Bright colors
    bright:
      black:   '0x555753'
      red:     '0xef2929'
      green:   '0x8ae234'
      yellow:  '0xfce94f'
      blue:    '0x729fcf'
      magenta: '0xad7fa8'
      cyan:    '0x34e2e2'
      white:   '0xffffff'

  monokai: &monokai
    # Default colors
    primary:
      background: '0x000000'
      foreground: '0xf1ebeb'
    # Normal colors
    normal:
      black:   '0x48483e'
      red:     '0xdc2566'
      green:   '0x8fc029'
      yellow:  '0xd4c96e'
      blue:    '0x55bcce'
      magenta: '0x9358fe'
      cyan:    '0x56b7a5'
      white:   '0xacada1'
    # Bright colors
    bright:
      black:   '0x76715e'
      red:     '0xfa2772'
      green:   '0xa7e22e'
      yellow:  '0xe7db75'
      blue:    '0x66d9ee'
      magenta: '0xae82ff'
      cyan:    '0x66efd5'
      white:   '0xcfd0c2'

  neon: &neon
    # Default colors
    primary:
      background: '0x000000'
      foreground: '0xf8f8f8'
    # Normal colors
    normal:
      black:   '0x171717'
      red:     '0xd81765'
      green:   '0x97d01a'
      yellow:  '0xffa800'
      blue:    '0x16b1fb'
      magenta: '0xff2491'
      cyan:    '0x0fdcb6'
      white:   '0xebebeb'
    # Bright colors
    bright:
      black:   '0x606060'
      red:     '0xff0000'
      green:   '0x76b639'
      yellow:  '0xe1a126'
      blue:    '0x289cd5'
      magenta: '0xff2491'
      cyan:    '0x0a9b81'
      white:   '0xf8f8f8'

  hyper: &hyper
    # Default colors
    primary:
      background: '0x000000'
      foreground: '0xffffff'
    cursor:
      text: '0xF81CE5'
      cursor: '0xffffff'
    # Normal colors
    normal:
      black:   '0x000000'
      red:     '0xfe0100'
      green:   '0x33ff00'
      yellow:  '0xfeff00'
      blue:    '0x0066ff'
      magenta: '0xcc00ff'
      cyan:    '0x00ffff'
      white:   '0xd0d0d0'
    # Bright colors
    bright:
      black:   '0x808080'
      red:     '0xfe0100'
      green:   '0x33ff00'
      yellow:  '0xfeff00'
      blue:    '0x0066ff'
      magenta: '0xcc00ff'
      cyan:    '0x00ffff'
      white:   '0xFFFFFF'

colors: *hyper
    

  # Dim colors

  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  # dim:
  #  black:   '0x000000'
  #  red:     '0x8c3336'
  #  green:   '0x7a8530'
  #  yellow:  '0x97822e'
  #  blue:    '0x506d8f'
  #  magenta: '0x80638e'
  #  cyan:    '0x497e7a'
  #  white:   '0x9a9a9a'


  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '0xff00ff' }`
  #
  # indexed_colors: []

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
visual_bell:
  animation: Linear
  duration: 300
  color: '0x111155'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 1.0

# Mouse bindings
#
# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: true

  url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux) xdg-open
    #   - (Windows) explorer
    launcher: xdg-open

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    modifiers: None

selection:
  semantic_escape_chars: ",│`|:\"' ()[]{}<>"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
dynamic_title: true

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (Linux/macOS) /bin/bash --login
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Windows 10 ConPTY backend (Windows only)
#
# This will enable better color support and may resolve other issues,
# however this API and its implementation is still young and so is
# disabled by default, as stability may not be as good as the winpty
# backend.
#
# Alacritty will fall back to the WinPTY automatically if the ConPTY
# backend cannot be initialized.
enable_experimental_conpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

# Key bindings
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - None
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
key_bindings:
  # (Windows/Linux only)
  - { key: V,        mods: Control|Shift, action: Paste            }
  - { key: C,        mods: Control|Shift, action: Copy             }
  - { key: S,        mods: Control|Shift, action: PasteSelection   }
  - { key: Key0,     mods: Control,       action: ResetFontSize    }
  - { key: Equals,   mods: Control,       action: IncreaseFontSize }
  - { key: Subtract, mods: Control,       action: DecreaseFontSize }

  # (macOS only)
  #- { key: Key0,   mods: Command, action: ResetFontSize    }
  #- { key: Equals, mods: Command, action: IncreaseFontSize }
  #- { key: Minus,  mods: Command, action: DecreaseFontSize }
  #- { key: K,      mods: Command, action: ClearHistory     }
  #- { key: K,      mods: Command, chars: "\x0c"            }
  #- { key: V,      mods: Command, action: Paste            }
  #- { key: C,      mods: Command, action: Copy             }
  #- { key: H,      mods: Command, action: Hide             }
  #- { key: Q,      mods: Command, action: Quit             }
  #- { key: W,      mods: Command, action: Quit             }

  - { key: Paste,                   action: Paste                            }
  - { key: Copy,                    action: Copy                             }
  - { key: L,        mods: Control, action: ClearLogNotice                   }
  - { key: L,        mods: Control, chars: "\x0c"                            }
  - { key: Home,                    chars: "\x1bOH",        mode: AppCursor  }
  - { key: Home,                    chars: "\x1b[H",        mode: ~AppCursor }
  - { key: End,                     chars: "\x1bOF",        mode: AppCursor  }
  - { key: End,                     chars: "\x1b[F",        mode: ~AppCursor }
  - { key: PageUp,   mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
  - { key: PageUp,   mods: Shift,   chars: "\x1b[5;2~",     mode: Alt        }
  - { key: PageUp,   mods: Control, chars: "\x1b[5;5~"                       }
  - { key: PageUp,                  chars: "\x1b[5~"                         }
  - { key: PageDown, mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
  - { key: PageDown, mods: Shift,   chars: "\x1b[6;2~",     mode: Alt        }
  - { key: PageDown, mods: Control, chars: "\x1b[6;5~"                       }
  - { key: PageDown,                chars: "\x1b[6~"                         }
  - { key: Tab,      mods: Shift,   chars: "\x1b[Z"                          }
  - { key: Back,                    chars: "\x7f"                            }
  - { key: Back,     mods: Alt,     chars: "\x1b\x7f"                        }
  - { key: Insert,                  chars: "\x1b[2~"                         }
  - { key: Delete,                  chars: "\x1b[3~"                         }
  - { key: Left,     mods: Shift,   chars: "\x1b[1;2D"                       }
  - { key: Left,     mods: Control, chars: "\x1b[1;5D"                       }
  - { key: Left,     mods: Alt,     chars: "\x1b[1;3D"                       }
  - { key: Left,                    chars: "\x1b[D",        mode: ~AppCursor }
  - { key: Left,                    chars: "\x1bOD",        mode: AppCursor  }
  - { key: Right,    mods: Shift,   chars: "\x1b[1;2C"                       }
  - { key: Right,    mods: Control, chars: "\x1b[1;5C"                       }
  - { key: Right,    mods: Alt,     chars: "\x1b[1;3C"                       }
  - { key: Right,                   chars: "\x1b[C",        mode: ~AppCursor }
  - { key: Right,                   chars: "\x1bOC",        mode: AppCursor  }
  - { key: Up,       mods: Shift,   chars: "\x1b[1;2A"                       }
  - { key: Up,       mods: Control, chars: "\x1b[1;5A"                       }
  - { key: Up,       mods: Alt,     chars: "\x1b[1;3A"                       }
  - { key: Up,                      chars: "\x1b[A",        mode: ~AppCursor }
  - { key: Up,                      chars: "\x1bOA",        mode: AppCursor  }
  - { key: Down,     mods: Shift,   chars: "\x1b[1;2B"                       }
  - { key: Down,     mods: Control, chars: "\x1b[1;5B"                       }
  - { key: Down,     mods: Alt,     chars: "\x1b[1;3B"                       }
  - { key: Down,                    chars: "\x1b[B",        mode: ~AppCursor }
  - { key: Down,                    chars: "\x1bOB",        mode: AppCursor  }
  - { key: F1,                      chars: "\x1bOP"                          }
  - { key: F2,                      chars: "\x1bOQ"                          }
  - { key: F3,                      chars: "\x1bOR"                          }
  - { key: F4,                      chars: "\x1bOS"                          }
  - { key: F5,                      chars: "\x1b[15~"                        }
  - { key: F6,                      chars: "\x1b[17~"                        }
  - { key: F7,                      chars: "\x1b[18~"                        }
  - { key: F8,                      chars: "\x1b[19~"                        }
  - { key: F9,                      chars: "\x1b[20~"                        }
  - { key: F10,                     chars: "\x1b[21~"                        }
  - { key: F11,                     chars: "\x1b[23~"                        }
  - { key: F12,                     chars: "\x1b[24~"                        }
  - { key: F1,       mods: Shift,   chars: "\x1b[1;2P"                       }
  - { key: F2,       mods: Shift,   chars: "\x1b[1;2Q"                       }
  - { key: F3,       mods: Shift,   chars: "\x1b[1;2R"                       }
  - { key: F4,       mods: Shift,   chars: "\x1b[1;2S"                       }
  - { key: F5,       mods: Shift,   chars: "\x1b[15;2~"                      }
  - { key: F6,       mods: Shift,   chars: "\x1b[17;2~"                      }
  - { key: F7,       mods: Shift,   chars: "\x1b[18;2~"                      }
  - { key: F8,       mods: Shift,   chars: "\x1b[19;2~"                      }
  - { key: F9,       mods: Shift,   chars: "\x1b[20;2~"                      }
  - { key: F10,      mods: Shift,   chars: "\x1b[21;2~"                      }
  - { key: F11,      mods: Shift,   chars: "\x1b[23;2~"                      }
  - { key: F12,      mods: Shift,   chars: "\x1b[24;2~"                      }
  - { key: F1,       mods: Control, chars: "\x1b[1;5P"                       }
  - { key: F2,       mods: Control, chars: "\x1b[1;5Q"                       }
  - { key: F3,       mods: Control, chars: "\x1b[1;5R"                       }
  - { key: F4,       mods: Control, chars: "\x1b[1;5S"                       }
  - { key: F5,       mods: Control, chars: "\x1b[15;5~"                      }
  - { key: F6,       mods: Control, chars: "\x1b[17;5~"                      }
  - { key: F7,       mods: Control, chars: "\x1b[18;5~"                      }
  - { key: F8,       mods: Control, chars: "\x1b[19;5~"                      }
  - { key: F9,       mods: Control, chars: "\x1b[20;5~"                      }
  - { key: F10,      mods: Control, chars: "\x1b[21;5~"                      }
  - { key: F11,      mods: Control, chars: "\x1b[23;5~"                      }
  - { key: F12,      mods: Control, chars: "\x1b[24;5~"                      }
  - { key: F1,       mods: Alt,     chars: "\x1b[1;6P"                       }
  - { key: F2,       mods: Alt,     chars: "\x1b[1;6Q"                       }
  - { key: F3,       mods: Alt,     chars: "\x1b[1;6R"                       }
  - { key: F4,       mods: Alt,     chars: "\x1b[1;6S"                       }
  - { key: F5,       mods: Alt,     chars: "\x1b[15;6~"                      }
  - { key: F6,       mods: Alt,     chars: "\x1b[17;6~"                      }
  - { key: F7,       mods: Alt,     chars: "\x1b[18;6~"                      }
  - { key: F8,       mods: Alt,     chars: "\x1b[19;6~"                      }
  - { key: F9,       mods: Alt,     chars: "\x1b[20;6~"                      }
  - { key: F10,      mods: Alt,     chars: "\x1b[21;6~"                      }
  - { key: F11,      mods: Alt,     chars: "\x1b[23;6~"                      }
  - { key: F12,      mods: Alt,     chars: "\x1b[24;6~"                      }
  - { key: F1,       mods: Super,   chars: "\x1b[1;3P"                       }
  - { key: F2,       mods: Super,   chars: "\x1b[1;3Q"                       }
  - { key: F3,       mods: Super,   chars: "\x1b[1;3R"                       }
  - { key: F4,       mods: Super,   chars: "\x1b[1;3S"                       }
  - { key: F5,       mods: Super,   chars: "\x1b[15;3~"                      }
  - { key: F6,       mods: Super,   chars: "\x1b[17;3~"                      }
  - { key: F7,       mods: Super,   chars: "\x1b[18;3~"                      }
  - { key: F8,       mods: Super,   chars: "\x1b[19;3~"                      }
  - { key: F9,       mods: Super,   chars: "\x1b[20;3~"                      }
  - { key: F10,      mods: Super,   chars: "\x1b[21;3~"                      }
  - { key: F11,      mods: Super,   chars: "\x1b[23;3~"                      }
  - { key: F12,      mods: Super,   chars: "\x1b[24;3~"                      }
  - { key: NumpadEnter,             chars: "\n"                              }
